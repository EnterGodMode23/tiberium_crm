// Mocks generated by Mockito 5.4.4 from annotations
// in tiberium_crm/test/helpers/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i3;
import 'package:tiberium_crm/data/models/create_new_harvest_task_req.dart'
    as _i13;
import 'package:tiberium_crm/data/models/create_new_main_task_req.dart' as _i14;
import 'package:tiberium_crm/data/models/create_new_proc_task_req.dart' as _i15;
import 'package:tiberium_crm/data/models/sms_login_req.dart' as _i17;
import 'package:tiberium_crm/data/models/tasks/harvest_task_list.dart' as _i5;
import 'package:tiberium_crm/data/models/tasks/main_task_response.dart' as _i6;
import 'package:tiberium_crm/data/models/tasks/processing_task_list.dart'
    as _i9;
import 'package:tiberium_crm/data/models/tasks/single_harvest_task_response.dart'
    as _i7;
import 'package:tiberium_crm/data/models/tasks/single_main_task_response.dart'
    as _i8;
import 'package:tiberium_crm/data/models/tasks/single_proc_task_response.dart'
    as _i10;
import 'package:tiberium_crm/data/models/users_list.dart' as _i4;
import 'package:tiberium_crm/infra/network/api_service.dart' as _i2;
import 'package:tiberium_crm/repos/auth_repository.dart' as _i16;
import 'package:tiberium_crm/repos/repository.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_1 extends _i1.SmartFake
    implements _i3.SharedPreferences {
  _FakeSharedPreferences_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersList_2 extends _i1.SmartFake implements _i4.UsersList {
  _FakeUsersList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHarvestTaskList_3 extends _i1.SmartFake
    implements _i5.HarvestTaskList {
  _FakeHarvestTaskList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMainTaskResponse_4 extends _i1.SmartFake
    implements _i6.MainTaskResponse {
  _FakeMainTaskResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSingleHarvestTaskResponse_5 extends _i1.SmartFake
    implements _i7.SingleHarvestTaskResponse {
  _FakeSingleHarvestTaskResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSingleMainTaskResponse_6 extends _i1.SmartFake
    implements _i8.SingleMainTaskResponse {
  _FakeSingleMainTaskResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProcessingTaskList_7 extends _i1.SmartFake
    implements _i9.ProcessingTaskList {
  _FakeProcessingTaskList_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSingleProcessingTaskResponse_8 extends _i1.SmartFake
    implements _i10.SingleProcessingTaskResponse {
  _FakeSingleProcessingTaskResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i11.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ApiService);

  @override
  _i3.SharedPreferences get localStorage => (super.noSuchMethod(
        Invocation.getter(#localStorage),
        returnValue: _FakeSharedPreferences_1(
          this,
          Invocation.getter(#localStorage),
        ),
      ) as _i3.SharedPreferences);

  @override
  _i12.Future<_i4.UsersList> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i12.Future<_i4.UsersList>.value(_FakeUsersList_2(
          this,
          Invocation.method(
            #getUsers,
            [],
          ),
        )),
      ) as _i12.Future<_i4.UsersList>);

  @override
  _i12.Future<_i5.HarvestTaskList> getHarvestTasks() => (super.noSuchMethod(
        Invocation.method(
          #getHarvestTasks,
          [],
        ),
        returnValue:
            _i12.Future<_i5.HarvestTaskList>.value(_FakeHarvestTaskList_3(
          this,
          Invocation.method(
            #getHarvestTasks,
            [],
          ),
        )),
      ) as _i12.Future<_i5.HarvestTaskList>);

  @override
  _i12.Future<_i6.MainTaskResponse> getMainTasks() => (super.noSuchMethod(
        Invocation.method(
          #getMainTasks,
          [],
        ),
        returnValue:
            _i12.Future<_i6.MainTaskResponse>.value(_FakeMainTaskResponse_4(
          this,
          Invocation.method(
            #getMainTasks,
            [],
          ),
        )),
      ) as _i12.Future<_i6.MainTaskResponse>);

  @override
  _i12.Future<_i7.SingleHarvestTaskResponse> postHarvestTask(
          _i13.CreateNewHarvestTaskReq? req) =>
      (super.noSuchMethod(
        Invocation.method(
          #postHarvestTask,
          [req],
        ),
        returnValue: _i12.Future<_i7.SingleHarvestTaskResponse>.value(
            _FakeSingleHarvestTaskResponse_5(
          this,
          Invocation.method(
            #postHarvestTask,
            [req],
          ),
        )),
      ) as _i12.Future<_i7.SingleHarvestTaskResponse>);

  @override
  _i12.Future<_i8.SingleMainTaskResponse> postMainTask(
          _i14.CreateNewMainTaskReq? req) =>
      (super.noSuchMethod(
        Invocation.method(
          #postMainTask,
          [req],
        ),
        returnValue: _i12.Future<_i8.SingleMainTaskResponse>.value(
            _FakeSingleMainTaskResponse_6(
          this,
          Invocation.method(
            #postMainTask,
            [req],
          ),
        )),
      ) as _i12.Future<_i8.SingleMainTaskResponse>);

  @override
  _i12.Future<_i7.SingleHarvestTaskResponse> patchHarvestTasks(
    String? uid,
    String? hTask,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchHarvestTasks,
          [
            uid,
            hTask,
          ],
        ),
        returnValue: _i12.Future<_i7.SingleHarvestTaskResponse>.value(
            _FakeSingleHarvestTaskResponse_5(
          this,
          Invocation.method(
            #patchHarvestTasks,
            [
              uid,
              hTask,
            ],
          ),
        )),
      ) as _i12.Future<_i7.SingleHarvestTaskResponse>);

  @override
  _i12.Future<_i8.SingleMainTaskResponse> patchMainTasks(
    String? uid,
    String? hTask,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchMainTasks,
          [
            uid,
            hTask,
          ],
        ),
        returnValue: _i12.Future<_i8.SingleMainTaskResponse>.value(
            _FakeSingleMainTaskResponse_6(
          this,
          Invocation.method(
            #patchMainTasks,
            [
              uid,
              hTask,
            ],
          ),
        )),
      ) as _i12.Future<_i8.SingleMainTaskResponse>);

  @override
  _i12.Future<_i9.ProcessingTaskList> getProcessingTasks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getProcessingTasks,
          [],
        ),
        returnValue:
            _i12.Future<_i9.ProcessingTaskList>.value(_FakeProcessingTaskList_7(
          this,
          Invocation.method(
            #getProcessingTasks,
            [],
          ),
        )),
      ) as _i12.Future<_i9.ProcessingTaskList>);

  @override
  _i12.Future<_i10.SingleProcessingTaskResponse> postProcessingTask(
          _i15.CreateNewProcTaskReq? req) =>
      (super.noSuchMethod(
        Invocation.method(
          #postProcessingTask,
          [req],
        ),
        returnValue: _i12.Future<_i10.SingleProcessingTaskResponse>.value(
            _FakeSingleProcessingTaskResponse_8(
          this,
          Invocation.method(
            #postProcessingTask,
            [req],
          ),
        )),
      ) as _i12.Future<_i10.SingleProcessingTaskResponse>);

  @override
  _i12.Future<_i10.SingleProcessingTaskResponse> patchProcessingTasks(
    String? uid,
    String? pTask,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchProcessingTasks,
          [
            uid,
            pTask,
          ],
        ),
        returnValue: _i12.Future<_i10.SingleProcessingTaskResponse>.value(
            _FakeSingleProcessingTaskResponse_8(
          this,
          Invocation.method(
            #patchProcessingTasks,
            [
              uid,
              pTask,
            ],
          ),
        )),
      ) as _i12.Future<_i10.SingleProcessingTaskResponse>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i16.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<bool> smsLogin(_i17.SmsLoginReq? req) => (super.noSuchMethod(
        Invocation.method(
          #smsLogin,
          [req],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i3.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i12.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}
